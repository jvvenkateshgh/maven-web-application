node
{

echo "the job name is: ${env.JOB_NAME}"
echo "node name is: ${env.NODE_NAME}"
echo "branch name is: ${env.BRANCH_NAME}"
echo "build no name is: ${env.BUILD_NUMBER}"
echo "Jenkins home name is: ${env.JENKINS_HOME}"


def mavenHome = tool name: 'maven3.9.11'

//set job properties
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), pipelineTriggers([pollSCM('* * * * *')])])

stage('checkout')
{
git branch: 'devlepment', credentialsId: '6beb2859-2a59-444c-a07e-5bc7e99a4ac2', url: 'https://github.com/jvvenkateshgh/maven-web-application.git'
}

stage('build')
{
sh "${mavenHome}/bin/mvn clean package"
}


stage('sonarreport')
{
sh "${mavenHome}/bin/mvn clean sonar:sonar"

}

stage('artifactrepository')
{
sh "${mavenHome}/bin/mvn clean deploy"

}
/*
stage('deploytotmcat')
{
sshagent(['4fd2ac34-826c-4ec2-b31f-cf47613e9ccf']) {
 sh "SCP -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.4.171:/opt/apache-tomcat-9.0.106/webapps/"
}

}
*/
stage('deploytotom')
{
deploy adapters: [tomcat9(alternativeDeploymentContext: '', credentialsId: 'ba50db0a-c86f-4987-8c7c-a29e5141ea32', path: '', url: 'http://52.66.20.60:9980/')], contextPath: null, war: '**/maven-web-application.war'
   
}

}
